generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  phone     String?
  profilePhoto String?
  address   String?
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  applicants Applicant[]
}

enum Role {
  USER
  ADMIN
}

// Jobs table added to match front-end job structure
model Job {
  id          String   @id @default(cuid())
  title       String
  company     String
  location    String
  country     String
  flag        String?
  salaryMin   Int
  salaryMax   Int
  ageMin   Int
  ageMax   Int
  currency    String
  type        String
  industry    String?
  experience  String?
  description String
  // requirements is stored as JSON (array of strings)
  requirements Json
  applicantsCount  Int      @default(0)
  // benefits stored as JSON array of strings
  benefits     Json?
  closingDate DateTime 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  applicants Applicant[]
}

model Applicant {
  id         String   @id @default(cuid())
  // link to the user who applied
  userId     Int?
  user       User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  // optional resume file path
  resumePath String?
  coverNote  String?
  jobId      String
  job        Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  @@unique([userId, jobId])
}